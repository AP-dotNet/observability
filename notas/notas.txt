docker run -d -p 5701:5701 --net bridge --name hazelcast  hazelcast/hazelcast:4.1
docker run -d --net bridge -p 49161:1521 -e ORACLE_ALLOW_REMOTE=true -e  ORACLE_PASSWORD=centos7 -v oracle-volume:/opt/oracle/oradata  gvenzl/oracle-xe


******************
******************
******************

Ver los pods del asistente virtual:
kubectl get pods -n lucy-chatbot


******************
******************
******************

Reiniciar pod (nombre del pod): (Proporcionar el nombre del pod a reiniciar)
Paso 1:  (ver los pod instalados para reiniciar)

kubectl get pods -n lucy-chatbot | grep lucy-whatsapp-api-dinn-ms


******************
******************
******************
Paso 2 matar proceso del pod:

kubectl delete pods lucy-front-reporteador-dinn-ms-848995ddc6-v9gpj -n lucy-chatbot
kubectl delete pods lucy-whatsapp-api-dinn-ms-74f497cb48-kspgn -n lucy-chatbot
kubectl delete pods lucy-whatsapp-api-dinn-ms-74f497cb48-nnx7x -n lucy-chatbot


kubectl scale deployment elasticsearch  -n observability --replicas=0

kubectl rollout restart deployment kibana -n observability | grep gcr 

  kubectl rollout restart deployment -n test-namespace
******************
******************
******************

Ver logs de un pod:
kubectl  -n observability logs -f elasticsearch-0  

Ver versi√≥n de imagen instalada: (Proporcionar el name del yaml)
kubectl describe deployment  lucy-front-reporteador-dinn-ms -n lucy-chatbot | grep gcr

Reiniciar namespace
kubectl -n lucy-chatbot rollout restart deploy

Entrar a pod

kubectl exec elasticsearch-0 -n observability  -- /bin/bash

Describe POd

kubectl describe pod node-exporter-k6lkz  -n observability


kafka-topics --create --bootstrap-server localhost:9092 --topic test-topic 


docker tag tw apdockerdotnet/tw
docker push apdockerdotnet/tw


kubectl rollout restart deployment  ingress-service-main-ms -n outbound


deploy de servicios en namespaces requeridos en cluster kubernetes 

ejecutar yamls para creacion de namesapace 
kubectl apply -f .\namespace\

ejecutar yamls de deploy ingress ns ingress 

kubectl apply -f .\ingress\

ejecutar  yamls de deploy para argoCD ns management

modificar ingress
kubectl apply -f .\argocd\ -n management
ejecutar el comando para obtencion de credencialles argocd.exe admin initial-password -n argocd, se reuiere cli argocd  




deploy servicio prometheus  ns observability
    modificar ingress para ruta de prometheus
    ejecutar despliegue mediante argoCD y repositorio git

deploy servicio grafana  ns observability
    modificar ingress para ruta de grafana
    ejecutar despliegue mediante argoCD y repositorio git

deploy servicio elastic ns observability
    modificar ingress para ruta de elastic
    ejecutar despliegue mediante argoCD y repositorio git
    ejecutar el comando para obtencion de credenciales  $ kubectl exec -it elasticsearch-0 -n observability -- bin/elasticsearch-setup-passwords auto -b
    SiCgjcs0GLkHBs9vOTVu
deploy servicio jaeger ns observability
    modificar ingress para ruta de jaeger
    actualizar la ruta de elasticsearch en el archivo jeager-kind.yaml
    ejecutar despliegue mediante argoCD y repositorio git

deploy servicio kibana ns observability
    modificar ingress para ruta de jaeger
    actualizar la ruta de elasticsearch en el archivo kibana-deployment.yaml
    actualizar credenciales de elastic en kibana-secret-user-elastic.yaml
    ejecutar despliegue mediante argoCD y repositorio git




    






